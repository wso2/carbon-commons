{
  "apiVersion":"0.2",
  "swaggerVersion":"1.1",
  "basePath":"http://petstore.swagger.wordnik.com:80/api",
  "resourcePath":"/pet",
  "apis":[
    {
      "path":"/pet/{petId}",
      "description":"Operations about pets",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Find pet by ID",
          "notes":"Returns a pet based on ID",
          "responseClass":"Pet",
          "nickname":"getPetById",
          "parameters":[
            {
              "name":"petId",
              "description":"ID of pet that needs to be fetched",
              "paramType":"path",
              "required":true,
              "allowMultiple":false,
              "dataType":"string"
            }
          ]
        }
      ]
    },
    {
      "path":"/pet",
      "description":"Operations about pets",
      "operations":[
        {
          "httpMethod":"POST",
          "summary":"Add a new pet to the store",
          "responseClass":"void",
          "nickname":"addPet",
          "parameters":[
            {
              "description":"Pet object that needs to be added to the store",
              "paramType":"body",
              "required":true,
              "allowMultiple":false,
              "dataType":"Pet"
            }
          ]
        },
        {
          "httpMethod":"PUT",
          "summary":"Update an existing pet",
          "responseClass":"void",
          "nickname":"updatePet",
          "parameters":[
            {
              "description":"Pet object that needs to be updated in the store",
              "paramType":"body",
              "required":true,
              "allowMultiple":false,
              "dataType":"Pet"
            }
          ]
        }
      ]
    },
    {
      "path":"/pet/findByStatus",
      "description":"Operations about pets",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Finds Pets by status",
          "notes":"Multiple status values can be provided with comma seperated strings",
          "responseClass":"List[Pet]",
          "nickname":"findPetsByStatus",
          "parameters":[
            {
              "name":"status",
              "description":"Status values that need to be considered for filter",
              "paramType":"query",
              "defaultValue":"available",
              "allowableValues":{
                "valueType":"LIST",
                "values":[
                  "available",
                  "pending",
                  "sold"
                ],
                "valueType":"LIST"
              },
              "required":true,
              "allowMultiple":true,
              "dataType":"string"
            }
          ]
        }
      ]
    },
    {
      "path":"/pet/findByTags",
      "description":"Operations about pets",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Finds Pets by tags",
          "notes":"Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
          "deprecated":true,
          "responseClass":"List[Pet]",
          "nickname":"findPetsByTags",
          "parameters":[
            {
              "name":"tags",
              "description":"Tags to filter by",
              "paramType":"query",
              "required":true,
              "allowMultiple":true,
              "dataType":"string"
            }
          ]
        }
      ]
    }
  ]
}