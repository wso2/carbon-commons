<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2297="http://core.user.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://service.ws.um.carbon.wso2.org">
    <wsdl:documentation>RemoteAuthorizationManagerService</wsdl:documentation>
    <wsdl:types>
        <xs:schema xmlns:ax2299="http://core.user.carbon.wso2.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org">
            <xs:import namespace="http://core.user.carbon.wso2.org/xsd" />
            <xs:complexType name="Exception">
                <xs:sequence>
                    <xs:element minOccurs="0" name="Exception" nillable="true" type="xs:anyType" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="UserStoreException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2299:UserStoreException" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isUserAuthorized">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isUserAuthorizedResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isRoleAuthorized">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isRoleAuthorizedResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getExplicitlyDeniedUsersForResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getExplicitlyDeniedUsersForResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getExplicitlyAllowedUsersForResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getExplicitlyAllowedUsersForResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeniedRolesForResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeniedRolesForResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllowedUIResourcesForUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="permissionRootPath" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllowedUIResourcesForUserResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllowedRolesForResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllowedRolesForResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="denyUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="denyRole">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearUserAuthorization">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearRoleAuthorization">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearRoleActionOnAllResources">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearResourceAuthorizations">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearAllUserAuthorization">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearAllRoleAuthorization">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="authorizeUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="authorizeRole">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns:ax2298="http://service.ws.um.carbon.wso2.org" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd">
            <xs:import namespace="http://service.ws.um.carbon.wso2.org" />
            <xs:complexType name="UserStoreException">
                <xs:complexContent>
                    <xs:extension base="ax2298:Exception">
                        <xs:sequence />
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="denyUserRequest">
        <wsdl:part name="parameters" element="ns:denyUser" />
    </wsdl:message>
    <wsdl:message name="UserStoreException">
        <wsdl:part name="parameters" element="ns:UserStoreException" />
    </wsdl:message>
    <wsdl:message name="getAllowedUIResourcesForUserRequest">
        <wsdl:part name="parameters" element="ns:getAllowedUIResourcesForUser" />
    </wsdl:message>
    <wsdl:message name="getAllowedUIResourcesForUserResponse">
        <wsdl:part name="parameters" element="ns:getAllowedUIResourcesForUserResponse" />
    </wsdl:message>
    <wsdl:message name="authorizeRoleRequest">
        <wsdl:part name="parameters" element="ns:authorizeRole" />
    </wsdl:message>
    <wsdl:message name="denyRoleRequest">
        <wsdl:part name="parameters" element="ns:denyRole" />
    </wsdl:message>
    <wsdl:message name="clearRoleActionOnAllResourcesRequest">
        <wsdl:part name="parameters" element="ns:clearRoleActionOnAllResources" />
    </wsdl:message>
    <wsdl:message name="isUserAuthorizedRequest">
        <wsdl:part name="parameters" element="ns:isUserAuthorized" />
    </wsdl:message>
    <wsdl:message name="isUserAuthorizedResponse">
        <wsdl:part name="parameters" element="ns:isUserAuthorizedResponse" />
    </wsdl:message>
    <wsdl:message name="getExplicitlyDeniedUsersForResourceRequest">
        <wsdl:part name="parameters" element="ns:getExplicitlyDeniedUsersForResource" />
    </wsdl:message>
    <wsdl:message name="getExplicitlyDeniedUsersForResourceResponse">
        <wsdl:part name="parameters" element="ns:getExplicitlyDeniedUsersForResourceResponse" />
    </wsdl:message>
    <wsdl:message name="authorizeUserRequest">
        <wsdl:part name="parameters" element="ns:authorizeUser" />
    </wsdl:message>
    <wsdl:message name="clearRoleAuthorizationRequest">
        <wsdl:part name="parameters" element="ns:clearRoleAuthorization" />
    </wsdl:message>
    <wsdl:message name="clearAllUserAuthorizationRequest">
        <wsdl:part name="parameters" element="ns:clearAllUserAuthorization" />
    </wsdl:message>
    <wsdl:message name="clearUserAuthorizationRequest">
        <wsdl:part name="parameters" element="ns:clearUserAuthorization" />
    </wsdl:message>
    <wsdl:message name="getAllowedRolesForResourceRequest">
        <wsdl:part name="parameters" element="ns:getAllowedRolesForResource" />
    </wsdl:message>
    <wsdl:message name="getAllowedRolesForResourceResponse">
        <wsdl:part name="parameters" element="ns:getAllowedRolesForResourceResponse" />
    </wsdl:message>
    <wsdl:message name="clearResourceAuthorizationsRequest">
        <wsdl:part name="parameters" element="ns:clearResourceAuthorizations" />
    </wsdl:message>
    <wsdl:message name="getDeniedRolesForResourceRequest">
        <wsdl:part name="parameters" element="ns:getDeniedRolesForResource" />
    </wsdl:message>
    <wsdl:message name="getDeniedRolesForResourceResponse">
        <wsdl:part name="parameters" element="ns:getDeniedRolesForResourceResponse" />
    </wsdl:message>
    <wsdl:message name="isRoleAuthorizedRequest">
        <wsdl:part name="parameters" element="ns:isRoleAuthorized" />
    </wsdl:message>
    <wsdl:message name="isRoleAuthorizedResponse">
        <wsdl:part name="parameters" element="ns:isRoleAuthorizedResponse" />
    </wsdl:message>
    <wsdl:message name="getExplicitlyAllowedUsersForResourceRequest">
        <wsdl:part name="parameters" element="ns:getExplicitlyAllowedUsersForResource" />
    </wsdl:message>
    <wsdl:message name="getExplicitlyAllowedUsersForResourceResponse">
        <wsdl:part name="parameters" element="ns:getExplicitlyAllowedUsersForResourceResponse" />
    </wsdl:message>
    <wsdl:message name="clearAllRoleAuthorizationRequest">
        <wsdl:part name="parameters" element="ns:clearAllRoleAuthorization" />
    </wsdl:message>
    <wsdl:portType name="RemoteAuthorizationManagerServicePortType">
        <wsdl:operation name="denyUser">
            <wsdl:input message="ns:denyUserRequest" wsaw:Action="urn:denyUser" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:denyUserUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="getAllowedUIResourcesForUser">
            <wsdl:input message="ns:getAllowedUIResourcesForUserRequest" wsaw:Action="urn:getAllowedUIResourcesForUser" />
            <wsdl:output message="ns:getAllowedUIResourcesForUserResponse" wsaw:Action="urn:getAllowedUIResourcesForUserResponse" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:getAllowedUIResourcesForUserUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="authorizeRole">
            <wsdl:input message="ns:authorizeRoleRequest" wsaw:Action="urn:authorizeRole" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:authorizeRoleUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="denyRole">
            <wsdl:input message="ns:denyRoleRequest" wsaw:Action="urn:denyRole" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:denyRoleUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="clearRoleActionOnAllResources">
            <wsdl:input message="ns:clearRoleActionOnAllResourcesRequest" wsaw:Action="urn:clearRoleActionOnAllResources" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:clearRoleActionOnAllResourcesUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="isUserAuthorized">
            <wsdl:input message="ns:isUserAuthorizedRequest" wsaw:Action="urn:isUserAuthorized" />
            <wsdl:output message="ns:isUserAuthorizedResponse" wsaw:Action="urn:isUserAuthorizedResponse" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:isUserAuthorizedUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="getExplicitlyDeniedUsersForResource">
            <wsdl:input message="ns:getExplicitlyDeniedUsersForResourceRequest" wsaw:Action="urn:getExplicitlyDeniedUsersForResource" />
            <wsdl:output message="ns:getExplicitlyDeniedUsersForResourceResponse" wsaw:Action="urn:getExplicitlyDeniedUsersForResourceResponse" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:getExplicitlyDeniedUsersForResourceUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="authorizeUser">
            <wsdl:input message="ns:authorizeUserRequest" wsaw:Action="urn:authorizeUser" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:authorizeUserUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="clearRoleAuthorization">
            <wsdl:input message="ns:clearRoleAuthorizationRequest" wsaw:Action="urn:clearRoleAuthorization" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:clearRoleAuthorizationUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="clearAllUserAuthorization">
            <wsdl:input message="ns:clearAllUserAuthorizationRequest" wsaw:Action="urn:clearAllUserAuthorization" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:clearAllUserAuthorizationUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="clearUserAuthorization">
            <wsdl:input message="ns:clearUserAuthorizationRequest" wsaw:Action="urn:clearUserAuthorization" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:clearUserAuthorizationUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="getAllowedRolesForResource">
            <wsdl:input message="ns:getAllowedRolesForResourceRequest" wsaw:Action="urn:getAllowedRolesForResource" />
            <wsdl:output message="ns:getAllowedRolesForResourceResponse" wsaw:Action="urn:getAllowedRolesForResourceResponse" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:getAllowedRolesForResourceUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="clearResourceAuthorizations">
            <wsdl:input message="ns:clearResourceAuthorizationsRequest" wsaw:Action="urn:clearResourceAuthorizations" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:clearResourceAuthorizationsUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="getDeniedRolesForResource">
            <wsdl:input message="ns:getDeniedRolesForResourceRequest" wsaw:Action="urn:getDeniedRolesForResource" />
            <wsdl:output message="ns:getDeniedRolesForResourceResponse" wsaw:Action="urn:getDeniedRolesForResourceResponse" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:getDeniedRolesForResourceUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="isRoleAuthorized">
            <wsdl:input message="ns:isRoleAuthorizedRequest" wsaw:Action="urn:isRoleAuthorized" />
            <wsdl:output message="ns:isRoleAuthorizedResponse" wsaw:Action="urn:isRoleAuthorizedResponse" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:isRoleAuthorizedUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="getExplicitlyAllowedUsersForResource">
            <wsdl:input message="ns:getExplicitlyAllowedUsersForResourceRequest" wsaw:Action="urn:getExplicitlyAllowedUsersForResource" />
            <wsdl:output message="ns:getExplicitlyAllowedUsersForResourceResponse" wsaw:Action="urn:getExplicitlyAllowedUsersForResourceResponse" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:getExplicitlyAllowedUsersForResourceUserStoreException" />
        </wsdl:operation>
        <wsdl:operation name="clearAllRoleAuthorization">
            <wsdl:input message="ns:clearAllRoleAuthorizationRequest" wsaw:Action="urn:clearAllRoleAuthorization" />
            <wsdl:fault message="ns:UserStoreException" name="UserStoreException" wsaw:Action="urn:clearAllRoleAuthorizationUserStoreException" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="RemoteAuthorizationManagerServiceSoap11Binding" type="ns:RemoteAuthorizationManagerServicePortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
        <wsdl:operation name="denyUser">
            <soap:operation soapAction="urn:denyUser" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAllowedUIResourcesForUser">
            <soap:operation soapAction="urn:getAllowedUIResourcesForUser" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="authorizeRole">
            <soap:operation soapAction="urn:authorizeRole" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="denyRole">
            <soap:operation soapAction="urn:denyRole" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearRoleActionOnAllResources">
            <soap:operation soapAction="urn:clearRoleActionOnAllResources" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isUserAuthorized">
            <soap:operation soapAction="urn:isUserAuthorized" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getExplicitlyDeniedUsersForResource">
            <soap:operation soapAction="urn:getExplicitlyDeniedUsersForResource" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="authorizeUser">
            <soap:operation soapAction="urn:authorizeUser" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearRoleAuthorization">
            <soap:operation soapAction="urn:clearRoleAuthorization" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearAllUserAuthorization">
            <soap:operation soapAction="urn:clearAllUserAuthorization" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAllowedRolesForResource">
            <soap:operation soapAction="urn:getAllowedRolesForResource" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearUserAuthorization">
            <soap:operation soapAction="urn:clearUserAuthorization" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDeniedRolesForResource">
            <soap:operation soapAction="urn:getDeniedRolesForResource" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearResourceAuthorizations">
            <soap:operation soapAction="urn:clearResourceAuthorizations" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isRoleAuthorized">
            <soap:operation soapAction="urn:isRoleAuthorized" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearAllRoleAuthorization">
            <soap:operation soapAction="urn:clearAllRoleAuthorization" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getExplicitlyAllowedUsersForResource">
            <soap:operation soapAction="urn:getExplicitlyAllowedUsersForResource" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="RemoteAuthorizationManagerServiceSoap12Binding" type="ns:RemoteAuthorizationManagerServicePortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
        <wsdl:operation name="denyUser">
            <soap12:operation soapAction="urn:denyUser" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAllowedUIResourcesForUser">
            <soap12:operation soapAction="urn:getAllowedUIResourcesForUser" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="authorizeRole">
            <soap12:operation soapAction="urn:authorizeRole" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="denyRole">
            <soap12:operation soapAction="urn:denyRole" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearRoleActionOnAllResources">
            <soap12:operation soapAction="urn:clearRoleActionOnAllResources" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isUserAuthorized">
            <soap12:operation soapAction="urn:isUserAuthorized" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getExplicitlyDeniedUsersForResource">
            <soap12:operation soapAction="urn:getExplicitlyDeniedUsersForResource" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="authorizeUser">
            <soap12:operation soapAction="urn:authorizeUser" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearRoleAuthorization">
            <soap12:operation soapAction="urn:clearRoleAuthorization" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearAllUserAuthorization">
            <soap12:operation soapAction="urn:clearAllUserAuthorization" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAllowedRolesForResource">
            <soap12:operation soapAction="urn:getAllowedRolesForResource" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearUserAuthorization">
            <soap12:operation soapAction="urn:clearUserAuthorization" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDeniedRolesForResource">
            <soap12:operation soapAction="urn:getDeniedRolesForResource" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearResourceAuthorizations">
            <soap12:operation soapAction="urn:clearResourceAuthorizations" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isRoleAuthorized">
            <soap12:operation soapAction="urn:isRoleAuthorized" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="clearAllRoleAuthorization">
            <soap12:operation soapAction="urn:clearAllRoleAuthorization" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getExplicitlyAllowedUsersForResource">
            <soap12:operation soapAction="urn:getExplicitlyAllowedUsersForResource" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="UserStoreException">
                <soap12:fault use="literal" name="UserStoreException" />
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="RemoteAuthorizationManagerServiceHttpBinding" type="ns:RemoteAuthorizationManagerServicePortType">
        <http:binding verb="POST" />
        <wsdl:operation name="denyUser">
            <http:operation location="denyUser" />
            <wsdl:input>
                <mime:content type="text/xml" part="denyUser" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getAllowedUIResourcesForUser">
            <http:operation location="getAllowedUIResourcesForUser" />
            <wsdl:input>
                <mime:content type="text/xml" part="getAllowedUIResourcesForUser" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getAllowedUIResourcesForUser" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="authorizeRole">
            <http:operation location="authorizeRole" />
            <wsdl:input>
                <mime:content type="text/xml" part="authorizeRole" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="denyRole">
            <http:operation location="denyRole" />
            <wsdl:input>
                <mime:content type="text/xml" part="denyRole" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="clearRoleActionOnAllResources">
            <http:operation location="clearRoleActionOnAllResources" />
            <wsdl:input>
                <mime:content type="text/xml" part="clearRoleActionOnAllResources" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="isUserAuthorized">
            <http:operation location="isUserAuthorized" />
            <wsdl:input>
                <mime:content type="text/xml" part="isUserAuthorized" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="isUserAuthorized" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getExplicitlyDeniedUsersForResource">
            <http:operation location="getExplicitlyDeniedUsersForResource" />
            <wsdl:input>
                <mime:content type="text/xml" part="getExplicitlyDeniedUsersForResource" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getExplicitlyDeniedUsersForResource" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="authorizeUser">
            <http:operation location="authorizeUser" />
            <wsdl:input>
                <mime:content type="text/xml" part="authorizeUser" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="clearRoleAuthorization">
            <http:operation location="clearRoleAuthorization" />
            <wsdl:input>
                <mime:content type="text/xml" part="clearRoleAuthorization" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="clearAllUserAuthorization">
            <http:operation location="clearAllUserAuthorization" />
            <wsdl:input>
                <mime:content type="text/xml" part="clearAllUserAuthorization" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getAllowedRolesForResource">
            <http:operation location="getAllowedRolesForResource" />
            <wsdl:input>
                <mime:content type="text/xml" part="getAllowedRolesForResource" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getAllowedRolesForResource" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="clearUserAuthorization">
            <http:operation location="clearUserAuthorization" />
            <wsdl:input>
                <mime:content type="text/xml" part="clearUserAuthorization" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getDeniedRolesForResource">
            <http:operation location="getDeniedRolesForResource" />
            <wsdl:input>
                <mime:content type="text/xml" part="getDeniedRolesForResource" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getDeniedRolesForResource" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="clearResourceAuthorizations">
            <http:operation location="clearResourceAuthorizations" />
            <wsdl:input>
                <mime:content type="text/xml" part="clearResourceAuthorizations" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="isRoleAuthorized">
            <http:operation location="isRoleAuthorized" />
            <wsdl:input>
                <mime:content type="text/xml" part="isRoleAuthorized" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="isRoleAuthorized" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="clearAllRoleAuthorization">
            <http:operation location="clearAllRoleAuthorization" />
            <wsdl:input>
                <mime:content type="text/xml" part="clearAllRoleAuthorization" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getExplicitlyAllowedUsersForResource">
            <http:operation location="getExplicitlyAllowedUsersForResource" />
            <wsdl:input>
                <mime:content type="text/xml" part="getExplicitlyAllowedUsersForResource" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getExplicitlyAllowedUsersForResource" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="RemoteAuthorizationManagerService">
        <wsdl:port name="RemoteAuthorizationManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteAuthorizationManagerServiceSoap11Binding">
            <soap:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap11Endpoint/" />
        </wsdl:port>
        <wsdl:port name="RemoteAuthorizationManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteAuthorizationManagerServiceSoap12Binding">
            <soap12:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap12Endpoint/" />
        </wsdl:port>
        <wsdl:port name="RemoteAuthorizationManagerServiceHttpsEndpoint" binding="ns:RemoteAuthorizationManagerServiceHttpBinding">
            <http:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsEndpoint/" />
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>