<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2355="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:tns="http://configuration.store.user.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2353="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ax2351="http://api.user.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://configuration.store.user.identity.carbon.wso2.org">
    <wsdl:documentation>UserStoreConfigAdminService</wsdl:documentation>
    <wsdl:types>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd">
            <xs:complexType name="IdentityUserStoreMgtException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
            <xs:complexType name="UserStoreException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
            <xs:complexType name="Properties">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="mandatoryProperties" nillable="true" type="ax2351:Property"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="optionalProperties" nillable="true" type="ax2351:Property"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Property">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="childProperties" nillable="true" type="ax2351:Property"></xs:element>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ax2356="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2354="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ax2352="http://api.user.carbon.wso2.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd">
            <xs:import namespace="http://api.user.carbon.wso2.org/xsd"></xs:import>
            <xs:import namespace="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd"></xs:import>
            <xs:import namespace="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd"></xs:import>
            <xs:element name="UserStoreConfigAdminServiceUserStoreException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2352:UserStoreException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="IdentityUserStoreMgtException" nillable="true" type="ax2354:IdentityUserStoreMgtException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UserStoreConfigAdminServiceTransformerException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="TransformerException" nillable="true" type="xs:anyType"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UserStoreConfigAdminServiceParserConfigurationException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="ParserConfigurationException" nillable="true" type="xs:anyType"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateDomain">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="disable" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="saveConfigurationToFile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userStoreDTO" nillable="true" type="ax2356:UserStoreDTO"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUserStoreManagerProperties">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUserStoreManagerPropertiesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2352:Properties"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSecondaryRealmConfigurations">
                <xs:complexType>
                    <xs:sequence></xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSecondaryRealmConfigurationsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2356:UserStoreDTO"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAvailableUserStoreClasses">
                <xs:complexType>
                    <xs:sequence></xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAvailableUserStoreClassesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteUserStores">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="userStores" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd">
            <xs:complexType name="UserStoreDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="disabled" nillable="true" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="domainId" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2355:PropertyDTO"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PropertyDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="deleteUserStoresRequest">
        <wsdl:part name="parameters" element="ns1:deleteUserStores"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSecondaryRealmConfigurationsRequest">
        <wsdl:part name="parameters" element="ns1:getSecondaryRealmConfigurations"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSecondaryRealmConfigurationsResponse">
        <wsdl:part name="parameters" element="ns1:getSecondaryRealmConfigurationsResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceIdentityUserStoreMgtException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UserStoreConfigAdminServiceUserStoreException">
        <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceUserStoreException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUserStoreManagerPropertiesRequest">
        <wsdl:part name="parameters" element="ns1:getUserStoreManagerProperties"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUserStoreManagerPropertiesResponse">
        <wsdl:part name="parameters" element="ns1:getUserStoreManagerPropertiesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="saveConfigurationToFileRequest">
        <wsdl:part name="parameters" element="ns1:saveConfigurationToFile"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UserStoreConfigAdminServiceParserConfigurationException">
        <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceParserConfigurationException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UserStoreConfigAdminServiceTransformerException">
        <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceTransformerException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateDomainRequest">
        <wsdl:part name="parameters" element="ns1:updateDomain"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getAvailableUserStoreClassesRequest">
        <wsdl:part name="parameters" element="ns1:getAvailableUserStoreClasses"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getAvailableUserStoreClassesResponse">
        <wsdl:part name="parameters" element="ns1:getAvailableUserStoreClassesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:portType name="UserStoreConfigAdminServicePortType">
        <wsdl:operation name="deleteUserStores">
            <wsdl:input message="tns:deleteUserStoresRequest" wsaw:Action="urn:deleteUserStores"></wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getSecondaryRealmConfigurations">
            <wsdl:input message="tns:getSecondaryRealmConfigurationsRequest" wsaw:Action="urn:getSecondaryRealmConfigurations"></wsdl:input>
            <wsdl:output message="tns:getSecondaryRealmConfigurationsResponse" wsaw:Action="urn:getSecondaryRealmConfigurationsResponse"></wsdl:output>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:getSecondaryRealmConfigurationsUserStoreConfigAdminServiceIdentityUserStoreMgtException"></wsdl:fault>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException" name="UserStoreConfigAdminServiceUserStoreException" wsaw:Action="urn:getSecondaryRealmConfigurationsUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUserStoreManagerProperties">
            <wsdl:input message="tns:getUserStoreManagerPropertiesRequest" wsaw:Action="urn:getUserStoreManagerProperties"></wsdl:input>
            <wsdl:output message="tns:getUserStoreManagerPropertiesResponse" wsaw:Action="urn:getUserStoreManagerPropertiesResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="saveConfigurationToFile">
            <wsdl:input message="tns:saveConfigurationToFileRequest" wsaw:Action="urn:saveConfigurationToFile"></wsdl:input>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceParserConfigurationException" name="UserStoreConfigAdminServiceParserConfigurationException" wsaw:Action="urn:saveConfigurationToFileUserStoreConfigAdminServiceParserConfigurationException"></wsdl:fault>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceTransformerException" name="UserStoreConfigAdminServiceTransformerException" wsaw:Action="urn:saveConfigurationToFileUserStoreConfigAdminServiceTransformerException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateDomain">
            <wsdl:input message="tns:updateDomainRequest" wsaw:Action="urn:updateDomain"></wsdl:input>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException" name="UserStoreConfigAdminServiceUserStoreException" wsaw:Action="urn:updateDomainUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:updateDomainUserStoreConfigAdminServiceIdentityUserStoreMgtException"></wsdl:fault>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceTransformerException" name="UserStoreConfigAdminServiceTransformerException" wsaw:Action="urn:updateDomainUserStoreConfigAdminServiceTransformerException"></wsdl:fault>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceParserConfigurationException" name="UserStoreConfigAdminServiceParserConfigurationException" wsaw:Action="urn:updateDomainUserStoreConfigAdminServiceParserConfigurationException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAvailableUserStoreClasses">
            <wsdl:input message="tns:getAvailableUserStoreClassesRequest" wsaw:Action="urn:getAvailableUserStoreClasses"></wsdl:input>
            <wsdl:output message="tns:getAvailableUserStoreClassesResponse" wsaw:Action="urn:getAvailableUserStoreClassesResponse"></wsdl:output>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="UserStoreConfigAdminServiceSoap11Binding" type="tns:UserStoreConfigAdminServicePortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"></soap:binding>
        <wsdl:operation name="getSecondaryRealmConfigurations">
            <soap:operation soapAction="urn:getSecondaryRealmConfigurations" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteUserStores">
            <soap:operation soapAction="urn:deleteUserStores" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getUserStoreManagerProperties">
            <soap:operation soapAction="urn:getUserStoreManagerProperties" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="saveConfigurationToFile">
            <soap:operation soapAction="urn:saveConfigurationToFile" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceParserConfigurationException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceParserConfigurationException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceTransformerException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceTransformerException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateDomain">
            <soap:operation soapAction="urn:updateDomain" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceParserConfigurationException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceParserConfigurationException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceTransformerException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceTransformerException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAvailableUserStoreClasses">
            <soap:operation soapAction="urn:getAvailableUserStoreClasses" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="UserStoreConfigAdminServiceSoap12Binding" type="tns:UserStoreConfigAdminServicePortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"></soap12:binding>
        <wsdl:operation name="getSecondaryRealmConfigurations">
            <soap12:operation soapAction="urn:getSecondaryRealmConfigurations" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteUserStores">
            <soap12:operation soapAction="urn:deleteUserStores" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getUserStoreManagerProperties">
            <soap12:operation soapAction="urn:getUserStoreManagerProperties" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="saveConfigurationToFile">
            <soap12:operation soapAction="urn:saveConfigurationToFile" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceParserConfigurationException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceParserConfigurationException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceTransformerException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceTransformerException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateDomain">
            <soap12:operation soapAction="urn:updateDomain" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceParserConfigurationException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceParserConfigurationException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceTransformerException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceTransformerException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAvailableUserStoreClasses">
            <soap12:operation soapAction="urn:getAvailableUserStoreClasses" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="UserStoreConfigAdminServiceHttpBinding" type="tns:UserStoreConfigAdminServicePortType">
        <http:binding verb="POST"></http:binding>
        <wsdl:operation name="getSecondaryRealmConfigurations">
            <http:operation location="getSecondaryRealmConfigurations"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="deleteUserStores">
            <http:operation location="deleteUserStores"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getUserStoreManagerProperties">
            <http:operation location="getUserStoreManagerProperties"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="saveConfigurationToFile">
            <http:operation location="saveConfigurationToFile"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="updateDomain">
            <http:operation location="updateDomain"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getAvailableUserStoreClasses">
            <http:operation location="getAvailableUserStoreClasses"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="UserStoreConfigAdminService">
        <wsdl:port name="UserStoreConfigAdminServiceHttpsSoap11Endpoint" binding="tns:UserStoreConfigAdminServiceSoap11Binding">
            <soap:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap11Endpoint/"></soap:address>
        </wsdl:port>
        <wsdl:port name="UserStoreConfigAdminServiceHttpsSoap12Endpoint" binding="tns:UserStoreConfigAdminServiceSoap12Binding">
            <soap12:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap12Endpoint/"></soap12:address>
        </wsdl:port>
        <wsdl:port name="UserStoreConfigAdminServiceHttpsEndpoint" binding="tns:UserStoreConfigAdminServiceHttpBinding">
            <http:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsEndpoint/"></http:address>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>