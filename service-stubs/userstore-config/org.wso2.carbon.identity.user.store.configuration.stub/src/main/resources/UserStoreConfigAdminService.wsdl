<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2367="http://api.user.carbon.wso2.org/xsd"
                  xmlns:ns1="http://org.apache.axis2/xsd"
                  xmlns:ax2369="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd"
                  xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"
                  xmlns:tns="http://configuration.store.user.identity.carbon.wso2.org"
                  xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
                  xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                  targetNamespace="http://configuration.store.user.identity.carbon.wso2.org">
    <wsdl:documentation>UserStoreConfigAdminService</wsdl:documentation>
    <wsdl:types>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://api.user.carbon.wso2.org/xsd">
            <xs:complexType name="UserStoreException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
            <xs:complexType name="Properties">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="advancedProperties" nillable="true"
                                type="ax2367:Property"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="mandatoryProperties" nillable="true"
                                type="ax2367:Property"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="optionalProperties" nillable="true"
                                type="ax2367:Property"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Property">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="childProperties" nillable="true"
                                type="ax2367:Property"></xs:element>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2368="http://api.user.carbon.wso2.org/xsd"
                   xmlns:ax2370="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd"
                   attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://org.apache.axis2/xsd">
            <xs:import namespace="http://api.user.carbon.wso2.org/xsd"></xs:import>
            <xs:import namespace="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd"></xs:import>
            <xs:element name="UserStoreConfigAdminServiceUserStoreException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="UserStoreException" nillable="true"
                                    type="ax2367:UserStoreException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUserStoreManagerProperties">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUserStoreManagerPropertiesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2367:Properties"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSecondaryRealmConfigurations">
                <xs:complexType>
                    <xs:sequence></xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSecondaryRealmConfigurationsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true"
                                    type="ax2369:UserStoreDTO"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAvailableUserStoreClasses">
                <xs:complexType>
                    <xs:sequence></xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAvailableUserStoreClassesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true"
                                    type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editUserStoreWithDomainName">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="previousDomainName" nillable="true"
                                    type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="userStoreDTO" nillable="true"
                                    type="ax2369:UserStoreDTO"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editUserStore">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userStoreDTO" nillable="true"
                                    type="ax2369:UserStoreDTO"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteUserStoresSet">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="domains" nillable="true"
                                    type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteUserStore">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UserStoreConfigAdminServiceException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="UserStoreConfigAdminServiceException" nillable="true"
                                    type="ns1:Exception"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:complexType name="Exception">
                <xs:sequence>
                    <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="changeUserStoreState">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="isDisable" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addUserStore">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userStoreDTO" nillable="true"
                                    type="ax2369:UserStoreDTO"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd">
            <xs:complexType name="UserStoreDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="disabled" nillable="true" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="domainId" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true"
                                type="ax2369:PropertyDTO"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PropertyDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="deleteUserStoreRequest">
        <wsdl:part name="parameters" element="ns1:deleteUserStore"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UserStoreConfigAdminServiceUserStoreException">
        <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceUserStoreException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="editUserStoreWithDomainNameRequest">
        <wsdl:part name="parameters" element="ns1:editUserStoreWithDomainName"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSecondaryRealmConfigurationsRequest">
        <wsdl:part name="parameters" element="ns1:getSecondaryRealmConfigurations"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getSecondaryRealmConfigurationsResponse">
        <wsdl:part name="parameters" element="ns1:getSecondaryRealmConfigurationsResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addUserStoreRequest">
        <wsdl:part name="parameters" element="ns1:addUserStore"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="changeUserStoreStateRequest">
        <wsdl:part name="parameters" element="ns1:changeUserStoreState"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UserStoreConfigAdminServiceException">
        <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUserStoreManagerPropertiesRequest">
        <wsdl:part name="parameters" element="ns1:getUserStoreManagerProperties"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getUserStoreManagerPropertiesResponse">
        <wsdl:part name="parameters" element="ns1:getUserStoreManagerPropertiesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="editUserStoreRequest">
        <wsdl:part name="parameters" element="ns1:editUserStore"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteUserStoresSetRequest">
        <wsdl:part name="parameters" element="ns1:deleteUserStoresSet"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getAvailableUserStoreClassesRequest">
        <wsdl:part name="parameters" element="ns1:getAvailableUserStoreClasses"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getAvailableUserStoreClassesResponse">
        <wsdl:part name="parameters" element="ns1:getAvailableUserStoreClassesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:portType name="UserStoreConfigAdminServicePortType">
        <wsdl:operation name="deleteUserStore">
            <wsdl:input message="tns:deleteUserStoreRequest" wsaw:Action="urn:deleteUserStore"></wsdl:input>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:deleteUserStoreUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="editUserStoreWithDomainName">
            <wsdl:input message="tns:editUserStoreWithDomainNameRequest"
                        wsaw:Action="urn:editUserStoreWithDomainName"></wsdl:input>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:editUserStoreWithDomainNameUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSecondaryRealmConfigurations">
            <wsdl:input message="tns:getSecondaryRealmConfigurationsRequest"
                        wsaw:Action="urn:getSecondaryRealmConfigurations"></wsdl:input>
            <wsdl:output message="tns:getSecondaryRealmConfigurationsResponse"
                         wsaw:Action="urn:getSecondaryRealmConfigurationsResponse"></wsdl:output>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:getSecondaryRealmConfigurationsUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addUserStore">
            <wsdl:input message="tns:addUserStoreRequest" wsaw:Action="urn:addUserStore"></wsdl:input>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:addUserStoreUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="changeUserStoreState">
            <wsdl:input message="tns:changeUserStoreStateRequest" wsaw:Action="urn:changeUserStoreState"></wsdl:input>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:changeUserStoreStateUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceException" name="UserStoreConfigAdminServiceException"
                        wsaw:Action="urn:changeUserStoreStateUserStoreConfigAdminServiceException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUserStoreManagerProperties">
            <wsdl:input message="tns:getUserStoreManagerPropertiesRequest"
                        wsaw:Action="urn:getUserStoreManagerProperties"></wsdl:input>
            <wsdl:output message="tns:getUserStoreManagerPropertiesResponse"
                         wsaw:Action="urn:getUserStoreManagerPropertiesResponse"></wsdl:output>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:getUserStoreManagerPropertiesUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="editUserStore">
            <wsdl:input message="tns:editUserStoreRequest" wsaw:Action="urn:editUserStore"></wsdl:input>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:editUserStoreUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteUserStoresSet">
            <wsdl:input message="tns:deleteUserStoresSetRequest" wsaw:Action="urn:deleteUserStoresSet"></wsdl:input>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:deleteUserStoresSetUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAvailableUserStoreClasses">
            <wsdl:input message="tns:getAvailableUserStoreClassesRequest"
                        wsaw:Action="urn:getAvailableUserStoreClasses"></wsdl:input>
            <wsdl:output message="tns:getAvailableUserStoreClassesResponse"
                         wsaw:Action="urn:getAvailableUserStoreClassesResponse"></wsdl:output>
            <wsdl:fault message="tns:UserStoreConfigAdminServiceUserStoreException"
                        name="UserStoreConfigAdminServiceUserStoreException"
                        wsaw:Action="urn:getAvailableUserStoreClassesUserStoreConfigAdminServiceUserStoreException"></wsdl:fault>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="UserStoreConfigAdminServiceSoap11Binding" type="tns:UserStoreConfigAdminServicePortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"></soap:binding>
        <wsdl:operation name="deleteUserStore">
            <soap:operation soapAction="urn:deleteUserStore" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="editUserStoreWithDomainName">
            <soap:operation soapAction="urn:editUserStoreWithDomainName" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addUserStore">
            <soap:operation soapAction="urn:addUserStore" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSecondaryRealmConfigurations">
            <soap:operation soapAction="urn:getSecondaryRealmConfigurations" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="changeUserStoreState">
            <soap:operation soapAction="urn:changeUserStoreState" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUserStoreManagerProperties">
            <soap:operation soapAction="urn:getUserStoreManagerProperties" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="editUserStore">
            <soap:operation soapAction="urn:editUserStore" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteUserStoresSet">
            <soap:operation soapAction="urn:deleteUserStoresSet" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAvailableUserStoreClasses">
            <soap:operation soapAction="urn:getAvailableUserStoreClasses" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="UserStoreConfigAdminServiceSoap12Binding" type="tns:UserStoreConfigAdminServicePortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"></soap12:binding>
        <wsdl:operation name="deleteUserStore">
            <soap12:operation soapAction="urn:deleteUserStore" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="editUserStoreWithDomainName">
            <soap12:operation soapAction="urn:editUserStoreWithDomainName" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addUserStore">
            <soap12:operation soapAction="urn:addUserStore" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSecondaryRealmConfigurations">
            <soap12:operation soapAction="urn:getSecondaryRealmConfigurations" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="changeUserStoreState">
            <soap12:operation soapAction="urn:changeUserStoreState" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="UserStoreConfigAdminServiceException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUserStoreManagerProperties">
            <soap12:operation soapAction="urn:getUserStoreManagerProperties" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="editUserStore">
            <soap12:operation soapAction="urn:editUserStore" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteUserStoresSet">
            <soap12:operation soapAction="urn:deleteUserStoresSet" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getAvailableUserStoreClasses">
            <soap12:operation soapAction="urn:getAvailableUserStoreClasses" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="UserStoreConfigAdminServiceUserStoreException">
                <soap12:fault use="literal" name="UserStoreConfigAdminServiceUserStoreException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="UserStoreConfigAdminServiceHttpBinding" type="tns:UserStoreConfigAdminServicePortType">
        <http:binding verb="POST"></http:binding>
        <wsdl:operation name="deleteUserStore">
            <http:operation location="deleteUserStore"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="editUserStoreWithDomainName">
            <http:operation location="editUserStoreWithDomainName"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="addUserStore">
            <http:operation location="addUserStore"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getSecondaryRealmConfigurations">
            <http:operation location="getSecondaryRealmConfigurations"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="changeUserStoreState">
            <http:operation location="changeUserStoreState"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getUserStoreManagerProperties">
            <http:operation location="getUserStoreManagerProperties"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="editUserStore">
            <http:operation location="editUserStore"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="deleteUserStoresSet">
            <http:operation location="deleteUserStoresSet"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getAvailableUserStoreClasses">
            <http:operation location="getAvailableUserStoreClasses"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="UserStoreConfigAdminService">
        <wsdl:port name="UserStoreConfigAdminServiceHttpsSoap11Endpoint"
                   binding="tns:UserStoreConfigAdminServiceSoap11Binding">
            <soap:address
                    location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap11Endpoint/"></soap:address>
        </wsdl:port>
        <wsdl:port name="UserStoreConfigAdminServiceHttpsSoap12Endpoint"
                   binding="tns:UserStoreConfigAdminServiceSoap12Binding">
            <soap12:address
                    location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap12Endpoint/"></soap12:address>
        </wsdl:port>
        <wsdl:port name="UserStoreConfigAdminServiceHttpsEndpoint" binding="tns:UserStoreConfigAdminServiceHttpBinding">
            <http:address
                    location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsEndpoint/"></http:address>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>